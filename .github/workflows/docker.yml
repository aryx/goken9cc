# Build goken via docker.
# See also the Dockerfiles at the root of the project.

name: docker

on:
  pull_request_target: {}
  workflow_dispatch: null
  push:
    branches: [ master ]

jobs:
  build-via-mkrc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      ## For qemu-user-binfmt (used inside the Dockerfile) to work
      ## for arm/arm64 (but does not work for mips)
      #- name: Register QEMU for some common arches
      #  uses: docker/setup-qemu-action@v3
      #  with:
      #    platforms: all
      #    # this actually does not work; only a few archs are supported
      #    # platforms: arm,arm64,mips,386,amd64

      # For qemu-user-binfmt (used inside the Dockerfile) to work.
      # This will install qemu-mips, but for weird reason it selects
      # qemu-mipsn32 instead of qemu-mips when inside the docker container.
      # I tried to deinstall qemu-mipsn32 so it picks a better default
      # but failed so right now I am explicitely calling qemu-mips
      # in mk test
      - name: Register QEMU for all arches (including MIPS)
        run: |
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
      - name: Debugging QEMU mips choice
        run: |
          cat /proc/sys/fs/binfmt_misc/qemu-mips
          #ls -al /usr/bin/
          #ln -sf /usr/bin/qemu-mips-static /usr/bin/qemu-mips
      #- uses: docker/setup-buildx-action@v3
      - run: docker build -f Dockerfile --tag goken9cc --target build .
      - run: docker build -f Dockerfile --tag goken9cc-test --target test .

  build-golang:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      # alt: make build-gosrc
      - run: docker build -f Dockerfile.golang .

  build-alpine:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: docker build -f Dockerfile.alpine .
