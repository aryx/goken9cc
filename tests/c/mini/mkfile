# can use $CC_ -S to see the assembly code

TOP=../../..
<$TOP/mkconfig
<$TOP/mkfiles/$objtype/mkfile

all:V: helloc.exe

clean:V:
        rm -f *.[5678ijv] *.exe *.a

test_one:V: all
        ./helloc.exe

#TODO? 'iar rc'? in principia we use 'iar vu'
#old: $LD_ -X to require NOSPLIT for all linked code, especially in $stem.6
# but not needed anymore
helloc.exe: helloc.c
   $CC_ -D$objtype -c $prereq
   $AS_ -D$objtype -c start_$objtype.s
   $AS_ -D$objtype -c xwrite_$objtype.s
   $AS_ -D$objtype -c xexit_$objtype.s
   iar rc libmini.a start_$objtype.$O_ xwrite_$objtype.$O_ xexit_$objtype.$O_
   $LD_ -L. -o $target -E _start helloc.$O_

#TODO: 386 riscv
ARCHS=amd64 arm arm64 mips
#alt: build 5.helloc 8.helloc
test:V:
        for (arch in $ARCHS) {
           echo $arch
           mk clean
           mk 'objtype='$arch
           qemu-$arch ./helloc.exe
        }


#alt: 5l_ -H7 -L. -o $target -E _start helloc.5 xwrite_arm.5 xexit_arm.5 start_arm.5
# when iar is not working
helloc_arm_.exe: helloc.c
   5c_ -Darm_ -c helloc.c
   5a_ -Darm_ -c xwrite_arm.s
   5a_ -Darm_ -c xexit_arm.s
   5a_ -Darm_ -c start_arm.s
   iar grc libmini.a start_arm.5 xwrite_arm.5 xexit_arm.5
   5l_ -H7 -L. -o $target -E _start helloc.5
